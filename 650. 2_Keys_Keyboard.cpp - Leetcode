class Solution {
public:
    int helper(int n,int a,int cop,vector<vector<int>>& dp)
    {
        if(a>n)
            return 1000000;
        else if(a==n)
            return 0;
        else if(dp[a][cop])
            return dp[a][cop];
        else
        {
            int copy=2+helper(n,a+a,a,dp); // we won't copy untill we have to paste, hence every time we copy we have to perform 2 operations hence adding 2
            int paste=1+helper(n,a+cop,cop,dp);
            return dp[a][cop]=min(copy,paste);
        }
    }
    
    int minSteps(int n) {
        if(n==1)
            return 0;
        vector<vector<int>> dp(n,vector<int>(n,0)); // buffer as we already have 1 Character present
        return helper(n,1,1,dp)+1;
        
    }
};
